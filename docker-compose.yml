version: "3.3"

services:
  caddy:
    image: davidtca/caddy-discord:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
  nolocal:
    image: davidtca/nolocal
    container_name: nolocal
    environment:
      - DISCORD_TOKEN
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass root
    working_dir: /rdb
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - /mnt/nolocal:/rdb
  s3fs:
    image: 'efrecon/s3fs:1.91'
    container_name: s3fs
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    security_opt:
      - 'apparmor:unconfined'
    stop_signal: SIGINT
    volumes:
      - '/mnt/nolocal:/opt/s3fs/bucket:rshared'
    environment:
      - AWS_S3_BUCKET
      - AWS_S3_MOUNT
      - AWS_S3_ACCESS_KEY_ID
      - AWS_S3_SECRET_ACCESS_KEY
      - AWS_S3_URL
      - S3FS_ARGS
      - S3FS_DEBUG
      - UID
      - GID
volumes:
  caddy_data:
  caddy_config: