name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - master
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  Check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3.0.0
      - name: Setup Kotlin
        uses: actions/setup-java@v3.1.1
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Gradlew Check
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon --stacktrace check
      - name: Codecov coverage report upload
        uses: codecov/codecov-action@v3.0.0
        with:
          files: ./build/reports/jacoco/test/jacocoTestReport.xml
  BuildDocs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Setup Python
        uses: actions/setup-python@v3.1.2
      - name: Build docs
        run: |
          pip install mkdocs
          pip install mkdocs-material
          pip install mkdocs-git-revision-date-localized-plugin
          mkdocs build
      - name: Upload docs
        uses: actions/upload-artifact@v3.0.0
        with:
          path: site/
          name: documentation
      - name: Github Pages Deploy
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_dir: site/
          publish_branch: github-actions
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3.0.0
      - name: Setup Kotlin
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Snyk Auth
        uses: snyk/actions@0.3.0
        with:
          command: auth
          args: ${{secrets.SNYK_TOKEN}}
      - name: Snyk monitor
        uses: snyk/actions@0.3.0
        with:
          command: monitor
  SetUpCaddy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3.0.0
      - name: Docker login
        uses: docker/login-action@v1.14.1
        with:
          username: davidtca
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Docker build & push
        uses: docker/build-push-action@v2.10.0
        with:
          context: ./caddy
          push: true
          tags: davidtca/caddy-discord:latest
  PrepareImage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3.0.0
      - name: Setup Kotlin
        uses: actions/setup-java@v3.1.1
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Jar
        run: |
          chmod +x ./gradlew
          ./gradlew --no-daemon bootJar
      - name: Rename Jar
        run: cp ./build/libs/$(ls ./build/libs/ | grep nolocal) nolocal.jar
      - name: Publish Jar
        uses: actions/upload-artifact@v3.0.0
        with:
          path: ./nolocal.jar
      - name: Publish compose
        uses: actions/upload-artifact@v3.0.0
        with:
          path: ./docker-compose.yml
          name: compose
      - name: Docker login
        uses: docker/login-action@v1.14.1
        with:
          username: davidtca
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Docker build & push
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          push: true
          tags: davidtca/nolocal:latest
  PrepareOracleCLoud:
    runs-on: ubuntu-latest
    outputs:
      ip: ${{ steps.oci.outputs.ip }}
      created: ${{ steps.oci.outputs.created }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v3.0.0
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Create Infrastructure
        id : oci
        run: |
          cd pipeline
          pip install oci
          result=( `python create.py ${{secrets.INFRA_AVAILABILITY_DOMAIN}} ${{secrets.INFRA_USER_OCID}} ${{secrets.INFRA_FINGERPRINT}} ${{secrets.INFRA_TENANCY}} ${{secrets.INFRA_REGION}} ${{secrets.INFRA_KEY_CONTENT}} ${{secrets.INFRA_AUTHORIZED_KEYS}}`)
          
          echo "::set-output name=ip::${result[0]}"
          if ((${#result[@]} > 1));
          then
            echo "::set-output name=created::true"
          fi
      - name: SSH wait
        run: |
          while ! nc -w5 -z ${{ steps.oci.outputs.ip }} 22; do
                  sleep 5
                  echo "SSH not available, retrying..."
          done; echo "SSH ready!"
      - name: Upload initialization script
        uses: betanzos/scp-upload@v1
        with:
          host: ${{ steps.oci.outputs.ip  }}
          username: ubuntu
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "./pipeline/init.sh"
      - name: Prepare machine
        if: ${{ steps.oci.outputs.created }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.oci.outputs.ip }}
          username: ubuntu
          key: ${{secrets.VM_SSH_PRIVATE_KEY}}
          script: |
            chmod +x init.sh
            ./init.sh
  Deploy:
    runs-on: ubuntu-latest
    needs: [ Check, Snyk, PrepareImage, BuildDocs, PrepareOracleCLoud, SetUpCaddy]
    steps:
      - name: Download the docker-compose file
        uses: actions/download-artifact@v3.0.0
        with:
          name: compose
          path: .
      - name: Push compose using tortilla
        uses: betanzos/scp-upload@v1
        with:
          host: ${{ needs.PrepareOracleCLoud.outputs.ip }}
          username: ubuntu
          key: ${{ secrets.INFRA_SSH_PRIVATE_KEY }}
          source: "./docker-compose.yml"
      - name: Start App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ needs.PrepareOracleCLoud.outputs.ip }}
          username: ubuntu
          key: ${{ secrets.INFRA_SSH_PRIVATE_KEY }}
          script: |
            echo 'DISCORD_TOKEN=${{secrets.DISCORD_TOKEN}}' >> .env
            sudo docker-compose pull
            sudo docker-compose up -d nolocal
      - name: Update DuckDNS IP
        run: |
          curl 'https://www.duckdns.org/update?domains=nolocalbot&token=${{secrets.DUCKDNS_TOKEN}}&ip=${{ needs.PrepareOracleCLoud.outputs.ip }}'
      - name: Start Caddy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ needs.PrepareOracleCLoud.outputs.ip }}
          username: ubuntu
          key: ${{ secrets.INFRA_SSH_PRIVATE_KEY }}
          script: |
            sudo docker-compose up -d caddy